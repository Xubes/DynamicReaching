/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void btnResetClick(GButton source, GEvent event) { //_CODE_:btnReset:933479:
  //println("btnReset - GButton >> GEvent." + event + " @ " + millis());
  resetAngle();
} //_CODE_:btnReset:933479:

public void btnSpinClick(GButton source, GEvent event) { //_CODE_:btnSpin:521123:
  //println("btnSpin - GButton >> GEvent." + event + " @ " + millis());
  if(spin180(direction)){
    direction *= -1;  // next spin will go in opposite direction
  }
} //_CODE_:btnSpin:521123:

public void csliderBrakeChange(GCustomSlider source, GEvent event) { //_CODE_:csliderBrake:657048:
  brake = source.getValueI();
  //println("csliderBrake - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:csliderBrake:657048:

public void buttonReverseClick(GButton source, GEvent event) { //_CODE_:buttonReverse:305135:
  direction *= -1;
  //println("buttonReverse - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:buttonReverse:305135:

public void dropListAnglesClicked(GDropList source, GEvent event) { //_CODE_:dropListAngles:867680:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:dropListAngles:867680:

public void csliderPowerChange(GCustomSlider source, GEvent event) { //_CODE_:csliderPower:301311:
  power = source.getValueI();
  //println("custom_slider1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:csliderPower:301311:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Sketch Window");
  btnReset = new GButton(this, 40, 20, 210, 42);
  btnReset.setText("Reset");
  btnReset.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  btnReset.addEventHandler(this, "btnResetClick");
  btnSpin = new GButton(this, 40, 220, 211, 103);
  btnSpin.setText("Spin!");
  btnSpin.setTextBold();
  btnSpin.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  btnSpin.addEventHandler(this, "btnSpinClick");
  labelDisplay = new GLabel(this, 40, 80, 210, 120);
  labelDisplay.setOpaque(true);
  csliderBrake = new GCustomSlider(this, 420, 20, 280, 70, "red_yellow18px");
  csliderBrake.setShowValue(true);
  csliderBrake.setShowLimits(true);
  csliderBrake.setTextOrientation(G4P.ORIENT_LEFT);
  csliderBrake.setRotation(PI/2, GControlMode.CORNER);
  csliderBrake.setLimits(0, 180, 0);
  csliderBrake.setNbrTicks(10);
  csliderBrake.setStickToTicks(true);
  csliderBrake.setShowTicks(true);
  csliderBrake.setNumberFormat(G4P.INTEGER, 0);
  csliderBrake.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  csliderBrake.setOpaque(true);
  csliderBrake.addEventHandler(this, "csliderBrakeChange");
  buttonReverse = new GButton(this, 0, 220, 30, 100);
  buttonReverse.setText("Reverse");
  buttonReverse.addEventHandler(this, "buttonReverseClick");
  dropListAngles = new GDropList(this, 460, 20, 70, 330, 10);
  dropListAngles.setItems(loadStrings("list_867680"), 0);
  dropListAngles.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  dropListAngles.addEventHandler(this, "dropListAnglesClicked");
  labelPowerSlider = new GLabel(this, 270, 300, 70, 20);
  labelPowerSlider.setText("Power");
  labelPowerSlider.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  labelPowerSlider.setOpaque(true);
  labelBrakeSlider = new GLabel(this, 350, 300, 70, 20);
  labelBrakeSlider.setText("Brake");
  labelBrakeSlider.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  labelBrakeSlider.setOpaque(true);
  csliderPower = new GCustomSlider(this, 340, 20, 280, 70, "blue18px");
  csliderPower.setShowValue(true);
  csliderPower.setShowLimits(true);
  csliderPower.setTextOrientation(G4P.ORIENT_LEFT);
  csliderPower.setRotation(PI/2, GControlMode.CORNER);
  csliderPower.setLimits(65, 100, 50);
  csliderPower.setNbrTicks(9);
  csliderPower.setStickToTicks(true);
  csliderPower.setShowTicks(true);
  csliderPower.setNumberFormat(G4P.INTEGER, 0);
  csliderPower.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  csliderPower.setOpaque(true);
  csliderPower.addEventHandler(this, "csliderPowerChange");
}

// Variable declarations 
// autogenerated do not edit
GButton btnReset; 
GButton btnSpin; 
GLabel labelDisplay; 
GCustomSlider csliderBrake; 
GButton buttonReverse; 
GDropList dropListAngles; 
GLabel labelPowerSlider; 
GLabel labelBrakeSlider; 
GCustomSlider csliderPower; 

